subset <- cutoff.k(weights, 10)
# plot  feature weights
H <- weights[1:10,]
M <- subset
# Plot the bar chart.
barplot(H,names.arg = M, ylab = "Importance weights", xlab = "Features",col = 3, main = "",border = "red")
#correntropy for data
correntopy<-function (input)
{
data=matrix(0,nrow(input),ncol(input))
col_means=colMeans(input)
dim(col_means) <- c(1, ncol(input))
col_stds= colSds(input)
dim(col_stds) <- c(1, ncol(input))
for(y in 1:ncol(input))
{
data[,y] = (1/(sqrt(2*3.14*(col_stds[,y]))) * exp(-(col_means[,y]-input[,y])^2)/(2*col_stds[,y]^2))
}
data[is.infinite(data)] <- 0
r= rowMeans(data,na.rm = TRUE)
dim(r) <- c(1, nrow(data))
r= as.data.frame(t(r))
r= scale(r, center = TRUE, scale = FALSE)
return (r)
}
data_sub= as.matrix(data_sub)
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col=3,lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col=2,lwd=2)
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= 2,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=3,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col=4,pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c(2,3,4), lty=c(3,2,1))
#########################################################
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("cadetblue2", "coral2"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FPR              KNN                  44.8
2    DR         KNN                  55.3
5    FPR              NB                   52.6
6    DR         NB                   44.4
3    FPR              RF                   38.4
4    DR         RF                   60.5
7    FPR              PRI                  15.3
8    DR         PRI                  83.7
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.45)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("cadetblue2", "coral2"))+theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=16,face="bold"), axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
#############################
par(mfrow=c(1,2))
# Roc Curve Row-data data
dat1 <- data.frame(TPR = c(0, 3, 5),FPR = c( 50,55,70))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Raw Sequences",xlab="False alarm rate %",ylab="Detection rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= 2,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(3, 5.5, 8),FPR = c( 40,50,62))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=3,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(50, 64, 75),FPR = c( 19,35,45))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col=4,pch=NA_integer_))
legend("topleft", legend = c("SVM","KNN","ELM"),lwd=2, col=c(2,3,4), lty=c(3,2,1))
# Roc Curve transformed-data data
dat1 <- data.frame(TPR = c(2.5, 4.5, 7.5),FPR = c( 48,50,63))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Transformed Sequences",xlab="False alarm rate %",ylab="Detection rate %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= 2,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(5, 7.5, 11),FPR = c( 39,44,53))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=3,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(57, 70, 81),FPR = c( 14,30,40))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col=4,pch=NA_integer_))
legend("topleft", legend = c("SVM","KNN","ELM"),lwd=2, col=c(2,3,4), lty=c(3,2,1))
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col=3,lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col=2,lwd=2)
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= 2,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=3,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col=4,pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c(2,3,4), lty=c(3,2,1))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FPR              KNN                  44.8
2    DR         KNN                  55.3
5    FPR              NB                   52.6
6    DR         NB                   44.4
3    FPR              RF                   38.4
4    DR         RF                   60.5
7    FPR              PRI                  15.3
8    DR         PRI                  83.7
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.45)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("cadetblue2", "coral2"))+theme_bw()+
theme(plot.title = element_text(hjust = 0.5, size=16,face="bold"), axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
#########################################################
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values=c("cadetblue2", "coral2"))+
scale_colour_grey()
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
scale_colour_grey(values=c("cadetblue2", "coral2"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
scale_colour_grey()+
scale_fill_manual(values=c("cadetblue2", "coral2"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
scale_colour_grey()+
scale_fill_manual(values=c("grey", "blue"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
theme_light()+
scale_fill_manual(values=c("grey", "blue"))
library(ggplot2)
par(mfrow=c(1,2))
data1 <- read.table(
header=TRUE, text='
Criteria           Techniques              Percentage
1    FAR              FSVM                  9.54
2    Accuracy         FSVM                  91.45
5    FAR              MCA                   7.83
6    Accuracy         MCA                   92.35
3    FAR              AIS                   12.87
4    Accuracy         AIS                   88.59
7    FAR             Proposed-CV-NF                  4.02
8    Accuracy        Proposed-CV-NF                  95.98
')
ggplot(data1,aes(Techniques, Percentage, fill = Criteria, width = 0.5)) +
geom_bar(stat="identity", position = "dodge") +
theme_light()+
scale_fill_manual(values=c("grey", "slategray"))
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= 2,pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col=3,pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col=4,pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c(2,3,4), lty=c(3,2,1))
data_sub= as.matrix(data_sub)
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col=3,lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col=2,lwd=2)
sd_norm= sd(coren_data[1:2000,])
#correntropy for data
correntopy<-function (input)
{
data=matrix(0,nrow(input),ncol(input))
col_means=colMeans(input)
dim(col_means) <- c(1, ncol(input))
col_stds= colSds(input)
dim(col_stds) <- c(1, ncol(input))
for(y in 1:ncol(input))
{
data[,y] = (1/(sqrt(2*3.14*(col_stds[,y]))) * exp(-(col_means[,y]-input[,y])^2)/(2*col_stds[,y]^2))
}
data[is.infinite(data)] <- 0
r= rowMeans(data,na.rm = TRUE)
dim(r) <- c(1, nrow(data))
r= as.data.frame(t(r))
r= scale(r, center = TRUE, scale = FALSE)
return (r)
}
data_sub= as.matrix(data_sub)
data1 <- data[,8:41]
View(data)
library(readr)
data <- read_csv("E:/My-papers/network-forensic-paper/forensic-technique/data.csv")
View(data)
data1 <- data[,8:41]
sd_norm= sd(coren_data[1:2000,])
data_sub= as.matrix(data[,8:42])
View(data_sub)
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col=3,lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col=2,lwd=2)
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
View(data)
correntopy<-function (input)
{
data=matrix(0,nrow(input),ncol(input))
col_means=colMeans(input)
dim(col_means) <- c(1, ncol(input))
col_stds= colSds(input)
dim(col_stds) <- c(1, ncol(input))
for(y in 1:ncol(input))
{
data[,y] = (1/(sqrt(2*3.14*(col_stds[,y]))) * exp(-(col_means[,y]-input[,y])^2)/(2*col_stds[,y]^2))
}
data[is.infinite(data)] <- 0
r= rowMeans(data,na.rm = TRUE)
dim(r) <- c(1, nrow(data))
r= as.data.frame(t(r))
r= scale(r, center = TRUE, scale = FALSE)
return (r)
}
data_sub= as.matrix(data[,9:41])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,9:42])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,8:40])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,8:42])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,9:42])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,9:41])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,9:40])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
data_sub= as.matrix(data[,9:41])
coren_data=correntopy(data_sub)
sd_norm= sd(coren_data[1:2000,])
sd_attack= sd(coren_data[2001:4000,])
corren_normal=cbind(abs(coren_data[1:2000,]+sd_norm) ,data[1:2000,43],data[1:2000,44])
corren_attack=cbind(abs(coren_data[2001:4000,]+sd_attack) ,data[2001:4000,43],data[2001:4000,44])
# plot correntropy for normal and attack data
par(mfrow=c(1,2))
plot( corren_normal[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of normal data",ylab="Values",pch=3,col="grey",lwd=2)
plot( corren_attack[1:2000,1],xlab="Feature vectors",type = c("s"),main="Correntropy of attack data",ylab="Values", pch=4,col="slategray",lwd=2)
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= "grey",pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col="slategray",pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col="silver",pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c("grey","slategray","silver"), lty=c(3,2,1))
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= "grey",pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col="slategray",pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col="gainsboro",pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c("grey","slategray","gainsboro"), lty=c(3,2,1))
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= "darkslategray",pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col="slategray",pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col="gainsboro",pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c("darkslategray","slategray","gainsboro"), lty=c(3,2,1))
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= "darkslategray",pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col="slategray",pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col="dark",pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c("darkslategray","slategray","dark"), lty=c(3,2,1))
# Roc Curve for correntropy-variation data
dat1 <- data.frame(TPR = c(85, 89, 94.31),FPR = c( 5.69,22,60))
op <- par(xaxs = "i", yaxs = "i")
plot(TPR ~ FPR, data = dat1, xlim = c(0,100), ylim = c(0,100), type = "n",main="Correntropy - Varaiation technique",xlab="False alarm rate %",ylab="Accuracy %")
with(dat1, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=3,lwd=2, col= "darkslategray",pch=NA_integer_))
#abline(0, 1)
par(op)
# add points
dat2 <- data.frame(TPR = c(90, 92, 95.72),FPR = c( 4.18,20,55))
points(TPR ~ FPR, dat2,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat2, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=2,lwd=2, col="slategray",pch=NA_integer_))
# add points
dat3 <- data.frame(TPR = c(91, 93.1, 96),FPR = c( 3.5,18,53))
points(TPR ~ FPR, dat3,lwd=2,col="blue",lty=2,pch=NA_integer_)
with(dat3, lines(c(0, FPR, 100), c(0, TPR, 100), type = "o", lty=1,lwd=2, col="black",pch=NA_integer_))
legend("bottomright", legend = c("100,000 samples","200,000 samples","300,000 samples"),lwd=2, col=c("darkslategray","slategray","black"), lty=c(3,2,1))
